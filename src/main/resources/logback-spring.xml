<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <property name="logback.logDir" value="logs/"/>

    <springProperty scope="context" name="MAIL_HOST" source="spring.mail.host"/>
    <springProperty scope="context" name="MAIL_PORT" source="spring.mail.port"/>
    <springProperty scope="context" name="MAIL_USERNAME" source="spring.mail.username"/>
    <springProperty scope="context" name="MAIL_PASSWORD" source="spring.mail.password"/>
    <springProperty scope="context" name="MAIL_ENABLE_TLS" source="spring.mail.properties.mail.smtp.starttls.enable"/>
    <springProperty scope="context" name="DING_TALK_TO" source="jframework.notification.ding-talk-to"/>

    <appender name="infoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
        所以我们使用下面的策略，可以避免输出 Error 的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--过滤 Error-->
            <level>ERROR</level>
            <!--匹配到就禁止-->
            <onMatch>DENY</onMatch>
            <!--没有匹配到就允许-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <File>${logback.logDir}/info.log</File>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>${logback.logDir}/info.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
            <!-- 单个日志文件最多 100MB -->
            <maxFileSize>100MB</maxFileSize>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d [%t] %-5level %logger{36}.%M\(%file:%line\) - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
        如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
        的日志改名为今天的日期。即，<File> 的日志都是当天的。
        -->
        <File>${logback.logDir}/error.log</File>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>${logback.logDir}/error.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
            <!-- 单个日志文件最多 100MB -->
            <maxFileSize>100MB</maxFileSize>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d [%t] %-5level %logger{36}.%M\(%file:%line\) - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="LOGSTASH" class="com.github.neatlife.jframework.logback.RedisAppender">
        <source>jframework</source>
        <host>127.0.0.1</host>
        <port>6379</port>
        <password></password>
        <key>logstash</key>
        <!-- 这个Key是Redis List的Key，需要和Logstash读取Redis的Key匹配 -->
        <mdc>true</mdc>
        <additionalField>
            <key>env</key>
            <value>local</value>
        </additionalField>
        <Location>true</Location>
    </appender>
    <appender name="DING_TALK" class="com.github.neatlife.jframework.logback.DingTalkAppender">
        <to>${DING_TALK_TO}</to>
    </appender>
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="LOGSTASH"/>
    </appender>
    <appender name="EMAIL" class="ch.qos.logback.classic.net.SMTPAppender">
        <smtpHost>${MAIL_HOST}</smtpHost>
        <smtpPort>${MAIL_PORT}</smtpPort>
        <username>${MAIL_USERNAME}</username>
        <password>${MAIL_PASSWORD}</password>
        <SSL>${MAIL_ENABLE_TLS}</SSL>
        <asynchronousSending>true</asynchronousSending>
        <to>dear.lin@live.com</to>
        <from>jframework</from>
        <subject>Error: %logger{20} - %m</subject>
        <layout class="com.github.neatlife.jframework.logback.CustomHTMLLayout"/>
    </appender>

    <root level="DEBUG">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="infoLog"/>
        <appender-ref ref="errorLog"/>
        <appender-ref ref="CONSOLE"/>
    </root>

    <root level="INFO">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="infoLog"/>z
        <appender-ref ref="errorLog"/>
        <appender-ref ref="CONSOLE"/>
    </root>

    <root level="ERROR">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="errorLog"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="EMAIL"/>
        <appender-ref ref="DING_TALK"/>
    </root>

</configuration>
